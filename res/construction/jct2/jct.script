local func = require "jct/func"
local pipe = require "jct/pipe"
local coor = require "jct/coor"
local jct = require "jct2"

local rList = pipe.new * {15, 12, 10, 8, 7.5, 6, 5, 4, 3.5, 3, 2.5, 2, 1.75, 1.5, 1.25, 1, 0.9, 0.85, 0.8, 0.75, 0.7, 0.666, 0.633, 0.6, 0.566, 0.533, 0.5, 0.475, 0.45, 0.425, 0.4, 0.375, 0.35, 0.325, 0.3, 0.28, 0.26, 0.24, 0.22, 0.2, 0.18, 0.16, 0.14, 0.12, 0.1, 0.09, 0.08, 0.07, 0.06, 0.05}

rList = pipe.new * rList * pipe.map(pipe.neg()) * pipe.rev() / jct.infi + rList
local trackLengths = {40, 60, 80, 100, 140, 160, 200, 240, 320, 400, 480, 500, 600, 800, 1000}
local trackNumberList = {1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20}

local createTemplateFn = function(params)
    local result = {}
    result[jct.base(1, 1)] = "jct2/tracks/standard.module"
    
    local x = 0
    local y = 0
    local z = 0
    local info = {
        id = 1,
        type = 1,
        pos = coor.xyz(x, y, z),
        length = 20,
        width = 5,
        ref = {}
    }

    result[jct.mixData(jct.base(1, 1), 51)] = "jct2/data/standard.module"
    local slotId, slotIds = jct.slotIds(info)
    for m, slotIds in pairs(slotIds) do
        for _, slotId in ipairs(slotIds) do
            result[slotId] = string.format("jct2/data/%s.module", m)
        end
    end

    return result
end

function data()
    return {
        createTemplateFn = createTemplateFn
    }
end
